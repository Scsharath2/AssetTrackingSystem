{"ast":null,"code":"var _jsxFileName = \"C:\\\\ATS\\\\asset-management-ui\\\\src\\\\pages\\\\Configuration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Configuration = () => {\n  _s();\n  const [serviceNowUrl, setServiceNowUrl] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    fetchConfig();\n  }, []);\n  const fetchConfig = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/config');\n      if (response.data) {\n        setServiceNowUrl(response.data.serviceNowUrl || '');\n        setUsername(response.data.username || '');\n        setPassword(response.data.password || '');\n      }\n    } catch (error) {\n      console.error('Error fetching configuration:', error);\n    }\n  };\n  const handleSave = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/config', {\n        serviceNowUrl,\n        username,\n        password\n      });\n      alert('Configuration updated successfully!');\n    } catch (error) {\n      console.error('Error updating configuration:', error);\n      alert('Failed to update configuration.');\n    }\n  };\n  const testConnection = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/config/test-connection', {\n        serviceNowUrl,\n        username,\n        password\n      });\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error testing connection:', error);\n      alert('Failed to connect to ServiceNow.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: 20,\n        maxWidth: 500,\n        margin: '20px auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"ServiceNow Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"ServiceNow URL\",\n        fullWidth: true,\n        value: serviceNowUrl,\n        onChange: e => setServiceNowUrl(e.target.value),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        fullWidth: true,\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: testConnection,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Test Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Configuration, \"eQt3Zxuy6tLpY1HqDxVXPkgCuik=\");\n_c = Configuration;\nexport default Configuration;\nvar _c;\n$RefreshReg$(_c, \"Configuration\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","TextField","Button","Typography","Paper","jsxDEV","_jsxDEV","Configuration","_s","serviceNowUrl","setServiceNowUrl","username","setUsername","password","setPassword","fetchConfig","response","get","data","error","console","handleSave","post","alert","testConnection","message","children","elevation","style","padding","maxWidth","margin","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","type","color","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/ATS/asset-management-ui/src/pages/Configuration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, TextField, Button, Typography, Paper } from '@mui/material';\r\n\r\nconst Configuration = () => {\r\n    const [serviceNowUrl, setServiceNowUrl] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchConfig();\r\n    }, []);\r\n\r\n    const fetchConfig = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/config');\r\n            if (response.data) {\r\n                setServiceNowUrl(response.data.serviceNowUrl || '');\r\n                setUsername(response.data.username || '');\r\n                setPassword(response.data.password || '');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        try {\r\n            await axios.post('http://localhost:5000/api/config', { serviceNowUrl, username, password });\r\n            alert('Configuration updated successfully!');\r\n        } catch (error) {\r\n            console.error('Error updating configuration:', error);\r\n            alert('Failed to update configuration.');\r\n        }\r\n    };\r\n\r\n    const testConnection = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/config/test-connection', { serviceNowUrl, username, password });\r\n            alert(response.data.message);\r\n        } catch (error) {\r\n            console.error('Error testing connection:', error);\r\n            alert('Failed to connect to ServiceNow.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Paper elevation={3} style={{ padding: 20, maxWidth: 500, margin: '20px auto' }}>\r\n                <Typography variant=\"h5\" gutterBottom>ServiceNow Configuration</Typography>\r\n                <TextField label=\"ServiceNow URL\" fullWidth value={serviceNowUrl} onChange={(e) => setServiceNowUrl(e.target.value)} margin=\"normal\" />\r\n                <TextField label=\"Username\" fullWidth value={username} onChange={(e) => setUsername(e.target.value)} margin=\"normal\" />\r\n                <TextField label=\"Password\" type=\"password\" fullWidth value={password} onChange={(e) => setPassword(e.target.value)} margin=\"normal\" />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>Save</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={testConnection} style={{ marginLeft: 10 }}>Test Connection</Button>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Configuration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}