{"ast":null,"code":"var _jsxFileName = \"C:\\\\ATS\\\\asset-management-ui\\\\src\\\\pages\\\\ServiceNowSync\\\\AssetsSync.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, Typography, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetsSync = () => {\n  _s();\n  const [assets, setAssets] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchAssets();\n  }, []);\n  const fetchAssets = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/assets\");\n      setAssets(response.data);\n    } catch (error) {\n      console.error(\"Error fetching assets:\", error);\n    }\n  };\n  const handleSync = async () => {\n    setLoading(true);\n    try {\n      await axios.post(\"http://localhost:5000/api/servicenow/sync/assets\");\n      alert(\"Assets synced successfully!\");\n      fetchAssets(); // Refresh data\n    } catch (error) {\n      console.error(\"Error syncing assets:\", error);\n      alert(\"Failed to sync assets.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: 20,\n        margin: \"20px auto\",\n        maxWidth: 800\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Assets Sync\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSync,\n        disabled: loading,\n        children: loading ? \"Syncing...\" : \"Sync Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          marginTop: 20\n        },\n        children: \"Synced Assets:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), assets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No assets available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 40\n      }, this) : assets.map(asset => /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: 10,\n          marginTop: 10\n        },\n        children: asset.name\n      }, asset.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AssetsSync, \"wL//iW0XZYgPQmqFHb6d2T6L1+I=\");\n_c = AssetsSync;\nexport default AssetsSync;\nvar _c;\n$RefreshReg$(_c, \"AssetsSync\");","map":{"version":3,"names":["React","useState","useEffect","axios","Button","Container","Typography","Paper","jsxDEV","_jsxDEV","AssetsSync","_s","assets","setAssets","loading","setLoading","fetchAssets","response","get","data","error","console","handleSync","post","alert","children","elevation","style","padding","margin","maxWidth","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","marginTop","length","map","asset","name","id","_c","$RefreshReg$"],"sources":["C:/ATS/asset-management-ui/src/pages/ServiceNowSync/AssetsSync.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Typography, Paper } from \"@mui/material\";\r\n\r\nconst AssetsSync = () => {\r\n    const [assets, setAssets] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchAssets();\r\n    }, []);\r\n\r\n    const fetchAssets = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:5000/api/assets\");\r\n            setAssets(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching assets:\", error);\r\n        }\r\n    };\r\n\r\n    const handleSync = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await axios.post(\"http://localhost:5000/api/servicenow/sync/assets\");\r\n            alert(\"Assets synced successfully!\");\r\n            fetchAssets(); // Refresh data\r\n        } catch (error) {\r\n            console.error(\"Error syncing assets:\", error);\r\n            alert(\"Failed to sync assets.\");\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Paper elevation={3} style={{ padding: 20, margin: \"20px auto\", maxWidth: 800 }}>\r\n                <Typography variant=\"h5\">Assets Sync</Typography>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSync} disabled={loading}>\r\n                    {loading ? \"Syncing...\" : \"Sync Now\"}\r\n                </Button>\r\n                <Typography variant=\"h6\" style={{ marginTop: 20 }}>Synced Assets:</Typography>\r\n                {assets.length === 0 ? <p>No assets available.</p> : assets.map(asset => (\r\n                    <Paper key={asset.id} style={{ padding: 10, marginTop: 10 }}>\r\n                        {asset.name}\r\n                    </Paper>\r\n                ))}\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AssetsSync;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}